---
- name: Configure Docker and K8s on EC2 Instances
  hosts: all
  become: true
  connection: ssh
  tasks:
  - name: updating apt
    command: sudo apt-get update
  - name: Install Docker
    command: sudo apt-get install -y docker.io
    become: yes
    become_user: root
  - name: Start Docker Service
    command: sudo systemctl start docker
    become: yes
    become_user: root
  - name: Deploy Docker Container
    command: docker run -itd -p 8084:8082 nikhillara1989/final_health_care:1.0
- name: Install Kubernetes on Ubuntu EC2 instance
  hosts: All
  become: true
  connection: ssh
  gather_facts: yes

  roles:
    - name: Install Docker and containerd
      tasks:
        - name: Update apt package lists
          apt: update_cache=yes

        - name: Install required packages
          apt: pkg=docker.io containerd.io
            state=present

        - name: Add user to docker group
          user: name=ubuntu groups=docker

        - name: Restart Docker service
          service: name=docker state=restarted

    - name: Install kubeadm, kubectl, and kubelet
      tasks:
        - name: Download and install kubeadm
          get_url: url=https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.28/bin/linux/amd64/kubeadm
            dest=/usr/local/bin/kubeadm
            mode=0755

        - name: Download and install kubectl
          get_url: url=https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.28/bin/linux/amd64/kubectl
            dest=/usr/local/bin/kubectl
            mode=0755

        - name: Download and install kubelet
          get_url: url=https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.28/bin/linux/amd64/kubelet
            dest=/usr/local/bin/kubelet
            mode=0755

    - name: Initialize Kubernetes cluster
      tasks:
        - name: Initialize kubeadm
          command: kubeadm init --pod-network-cidr=10.244.0.0/16

        - name: Join node to cluster (if applicable)
          command: kubeadm join --discovery-token {{ discovery_token }} --discovery-token-ca-cert-hash {{ discovery_token_ca_cert_hash }} --master {{ master_ip }}

  vars:
    discovery_token: "{{ output.stdout }}"
    discovery_token_ca_cert_hash: "{{ output.stdout }}"
    master_ip: "{{ ansible_host }}"
